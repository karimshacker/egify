version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: egify_postgres
    environment:
      POSTGRES_DB: egify_db
      POSTGRES_USER: egify_user
      POSTGRES_PASSWORD: egify_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - egify_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U egify_user -d egify_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: egify_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - egify_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch (for search functionality)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: egify_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - egify_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: egify_backend
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://egify_user:egify_password@postgres:5432/egify_db
      REDIS_URL: redis://redis:6379
      ELASTICSEARCH_NODE: http://elasticsearch:9200
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_ACCESS_EXPIRES_IN: 900
      JWT_REFRESH_EXPIRES_IN: 604800
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_SECURE: false
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
      EMAIL_FROM: noreply@egify.com
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: info
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - egify_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database migration service
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: egify_migrate
    environment:
      DATABASE_URL: postgresql://egify_user:egify_password@postgres:5432/egify_db
    command: npx prisma migrate deploy
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - egify_network

  # Database seeding service
  seed:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: egify_seed
    environment:
      DATABASE_URL: postgresql://egify_user:egify_password@postgres:5432/egify_db
    command: npm run seed
    depends_on:
      migrate:
        condition: service_completed_successfully
    networks:
      - egify_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  egify_network:
    driver: bridge 